<start> -> program ( ) { <gen_dec_block> <assign_block> }
<gen_dec_block> -> <gen_dec> <gen_dec_block>
<gen_dec_block> -> <gen_dec> 
<assign_block> -> <assign_stmnt> <assign_block>
<assign_block> -> <assign_stmnt> 
<gen_dec> -> declare var_name : <type> 
<gen_dec> -> declare list of variables <var_names> : <type>
<var_names> -> var_name 
<var_names> -> var_name <var_names>
<type> -> integer ; 
<type> -> real ;  
<type> -> Boolean ;  
<type> -> <Jagarr_type> 
<type> -> <Rectarr_type>
<Jagarr_type> -> jagged array <dims_J> of integer ; <populate>
<dims_J> -> [ num..num ] [ ] <brackets>
<brackets> -> [ ] 
<brackets> -> e
<populate> -> R1 [ num ] : size num : values <vals> <populate>
<vals> -> { <val_ext>  num <nex> }
<nex> -> num <nex> 
<nex> -> e 
<val_ext> -> num <nex> ; <val_ext> 
<val_ext> -> e
<Rectarr_type> -> array <dims_R> of integer ;
<dims_R> -> [ <var_Ind>..<var_Ind> ] 
<dims_R> -> [ <var_Ind>..<var_Ind> ] <dims_R>
<var_Ind> -> var_name 
<var_Ind> -> num
<assign_stmt> -> <arithmetic_expr> 
<assign_stmt> -> <bool_expr> 
<arithmetic_expr> -> <gen_var_name> = <expr1> ;
<expr1> -> <expr1> + <term1>
<expr1> -> <expr1> - <term1>
<expr1> -> <term1>
<term1> -> <term1> * <var>
<term1> -> <term1> / <var>
<term1> -> <var>
<bool_expr> -> var_name = <expr2> ;
<expr2> -> <expr2> ||| <term2>
<expr2> -> <term2>
<term2> -> <term2> &&& var_name
<term2> -> var_name
<var> -> <gen_var_name> 
<var> -> num
<gen_var_name> -> var_name 
<var> -> var_name [ num <nex> ]

